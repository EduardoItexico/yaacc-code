class YaaccUpnpServerService
!!!143106.java!!!	onBind(inout intent : Intent) : IBinder
		Log.d(this.getClass().getName(), "On Bind");
		// do nothing
		return null;
!!!143234.java!!!	onStart(inout intent : Intent, in startid : int) : void
		Log.d(this.getClass().getName(), "On Start ID: " + UDN_ID);
		if (upnpClient == null) {
			upnpClient = new UpnpClient();
		}
		//the footprint of the onStart() method must be small  
		//otherwise android will kill the service
		//in order of this circumstance we have to initialize the service asynchronous
		Thread initializationThread = new Thread(new Runnable() {
			
			@Override
			public void run() {
				initialize();				
			}
		});
		initializationThread.start();
		Log.d(this.getClass().getName(), "End On Start");
!!!143362.java!!!	initialize() : void
		if (!upnpClient.isInitialized()) {
			upnpClient.initialize(getApplicationContext());
			watchdog = false;
			new Timer().schedule(new TimerTask() {

				@Override
				public void run() {
					watchdog = true;
				}
			}, 30000L); // 30 sec. watchdog

			while (!(upnpClient.isInitialized() && watchdog)) {
				// wait for upnpClient initialization
			}
		}
		if (upnpClient.isInitialized()) {
			upnpClient.getRegistry().addDevice(createDevice());
		} else {
			throw new IllegalStateException("UpnpClient is not initialized!");
		}
!!!143490.java!!!	createDevice() : LocalDevice
		LocalDevice device;
		try {
			device = new LocalDevice(new DeviceIdentity(new UDN(UDN_ID)),
					new UDADeviceType("YAACCMediaServer"), new DeviceDetails(
							"YAACC-MediaServer", new ManufacturerDetails(
									"www.yaacc.de")), createServices());

			return device;
		} catch (ValidationException e) {
			throw new IllegalStateException("Exception during device creation", e);			
		}
		
!!!143618.java!!!	createServices() : LocalService<?>
		List<LocalService<?>> services = new ArrayList<LocalService<?>>();
		services.add(createAVTransportService());

		return services.toArray(new LocalService[] {});
!!!143746.java!!!	createAVTransportService() : LocalService<AbstractAVTransportService>
		LocalService<AbstractAVTransportService> avTransportService = new AnnotationLocalServiceBinder()
				.read(AbstractAVTransportService.class);
		avTransportService
				.setManager(new DefaultServiceManager<AbstractAVTransportService>(
						avTransportService, null) {
					@Override
					protected AbstractAVTransportService createServiceInstance()
							throws Exception {
						return new YaaccAVTransportService(upnpClient);
					}
				});
		return avTransportService;
